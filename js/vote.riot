<vote>
    <style>
        vote {
            --star-size: 32px;
            --star-spacing: 1px;
            --star-color: var(--accent-color);
            --star-background: #444;

            display: flex;
            flex-direction: row;
            justify-content: center;
            align-items: center;

            gap: var(--star-spacing);
        }

        vote-star {
            width: var(--star-size);
            height: var(--star-size);

            clip-path: polygon(50% 0%, 61% 35%, 98% 35%, 68% 57%, 79% 91%, 50% 70%, 21% 91%, 32% 57%, 2% 35%, 39% 35%);
        }

        vote-star::after {
            content: '';
            position: absolute;

            width: var(--star-size);
            height: var(--star-size);

            background: linear-gradient(90deg, var(--star-color) var(--star-rating), var(--star-background) var(--star-rating));
        }

        vote-score {
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;

            width: var(--star-size);
            height: var(--star-size);

            font-size: 14px;

            color: var(--secondary-color);
        }
    </style>

    <script>
        export default {
            starRating(star) {
                return `--star-rating: ${Math.max(0, Math.min(this.props.average - star, 1)) * 100}%;`;
            }
        };
    </script>

    <vote-star each="{star in [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]}" style="{starRating(star)}" />

    <vote-score>
        <div>
            {Math.round(this.props.average * 10) / 10}
        </div>
        <div>
            ({this.props.count})
        </div>
    </vote-score>
</vote>