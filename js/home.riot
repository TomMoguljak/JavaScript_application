<home class="content scaled">
    <script>
        export default {
            async onBeforeMount() {
                this.state = {
                    type: this.props.type,
                    results: [],

                    page: this.props.page || 1,
                    pages: 1,

                    error: "Loading...",
                };

                this.fetchTrending();
            },

            async fetchTrending() {
                api.fetchTrending(this.state.page).then(response => {
                    this.state.pages = response.total_pages;
                    this.state.results = response.results;

                    this.state.error = null;
                    this.update();
                }).catch(error => {
                    this.state.results = [];

                    this.state.error = error.toString();
                    this.update();
                });
            },

            onPageChange(page) {
                window.location.hash = `#/home/${page}`;
                this.state.page = page;
                window.scrollTo(0, 0);

                this.update();

                this.fetchTrending();
            }
        }
    </script>

    <pager page="{this.state.page}" pages="{this.state.pages}" onpagechange="{this.onPageChange}" />

    <error if="{this.state.error}" message="{this.state.error}" />

    <card-list if="{this.state.results.length > 0}">
        <div each="{result in this.state.results}" style="display: flex;">
            <movie-card if="{result.media_type === 'movie'}" movie="{result}" />
            <show-card if="{result.media_type === 'tv'}" show="{result}" />
        </div>
    </card-list>

    <pager page="{this.state.page}" pages="{this.state.pages}" onpagechange="{this.onPageChange}" />
</home>