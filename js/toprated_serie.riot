<toprated_serie>

    <section class="section">
        <div class="container">
            <h1 class="title">Les séries les mieux notées</h1>
        </div>
        <div each="{item in this.state.toprated[this.state.toprated['page']]}" class="column is-one-third">
            <a href="#/tv/{item['id']}">
                <div class="card">
                    <div class="card-image">
                        <figure class="image">
                            <img src="https://image.tmdb.org/t/p/original/{item['poster_path']}"
                                alt="Placeholder image">
                        </figure>
                    </div>

                    <div class="card-content">
                        <div class="media">
                            <div class="media-content">
                                <p class="title is-4">{item['name']}</p>
                                <p class="subtitle is-6">{item['first_air_date']}</p>
                                <p class="subtitle is-6">{item['vote_average']}</p>
                            </div>
                        </div>
                    </div>
                </div>
            </a>
        </div>
    </section>

    <div class="page-navigation">
        <button class="button is-primary"
            onclick="{() => this.getTopRatedSeries(this.state.toprated['page'] - 1)}">Previous</button>
        <p>Page {this.state.toprated['page']} of {this.state.toprated['total_pages']}</p>
        <button class="button is-primary"
            onclick="{() => this.getTopRatedSeries(this.state.toprated['page'] + 1)}">Next</button>
    </div>

    <script>
        export default function toprated_serie() {
            return {
                async onBeforeMount(props, state) {
                    this.state = {
                        toprated: [],
                        page_index: 1
                    }
                    await this.getTopRatedSeries(this.state.page_index)
                },

                async getTopRatedSeries(page_index) {
                    let api = apiModel()
                    let toprated = await api.getTopRatedSeries(page_index)
                    this.state.toprated['total_pages'] = toprated['total_pages']
                    this.state.toprated['page'] = page_index
                    this.state.toprated[this.state.toprated['page']] = toprated['results']
                    this.update()
                }
            }
        }
    </script>

</toprated_serie>